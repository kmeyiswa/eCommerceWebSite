{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useRef, useState } from 'react';\nimport UploadList from './UploadList';\nimport Dragger from './Dragger';\nimport axios from 'axios';\nexport var Upload = function (props) {\n  var action = props.action,\n      defaultFileList = props.defaultFileList,\n      beforeUpload = props.beforeUpload,\n      onError = props.onError,\n      onProgress = props.onProgress,\n      onSuccess = props.onSuccess,\n      onChange = props.onChange,\n      onRemove = props.onRemove,\n      children = props.children,\n      drag = props.drag,\n      accept = props.accept,\n      multiple = props.multiple,\n      name = props.name,\n      headers = props.headers,\n      data = props.data,\n      withCredentials = props.withCredentials;\n  var fileInput = useRef(null);\n\n  var _a = useState(defaultFileList || []),\n      fileList = _a[0],\n      setFileList = _a[1];\n\n  var handleClick = function () {\n    if (fileInput.current) {\n      fileInput.current.click();\n    }\n  };\n\n  var handleFileChange = function (e) {\n    var files = e.target.files;\n    if (!files) return;\n    uploadFiles(files);\n\n    if (fileInput.current) {\n      fileInput.current.value = '';\n    }\n  };\n\n  var uploadFiles = function (files) {\n    var postFiles = Array.from(files);\n    postFiles.forEach(function (file) {\n      if (!beforeUpload) {\n        post(file);\n      } else {\n        var result = beforeUpload(file);\n\n        if (result && result instanceof Promise) {\n          result.then(function (processedFile) {\n            post(processedFile);\n          });\n        } else if (result !== false) {\n          post(file);\n        }\n      }\n    });\n  };\n\n  var updateFileList = function (updateFile, updateObj) {\n    setFileList(function (prevFile) {\n      return prevFile.map(function (file) {\n        return file.uid === updateFile.uid ? __assign(__assign({}, file), updateObj) : file;\n      });\n    });\n  };\n\n  var handleRemove = function (file) {\n    setFileList(function (prevList) {\n      return prevList.filter(function (item) {\n        return item.uid !== file.uid;\n      });\n    });\n    if (onRemove) onRemove(file);\n  };\n\n  var post = function (file) {\n    var _file = {\n      uid: Date.now() + 'upload-file',\n      status: 'ready',\n      name: file.name,\n      size: file.size,\n      percent: 0,\n      raw: file\n    };\n    setFileList(function (prevList) {\n      return __spreadArray([_file], prevList);\n    });\n    var formData = new FormData();\n    formData.append(name || 'file', file);\n\n    if (data) {\n      Object.keys(data).forEach(function (key) {\n        formData.append(key, data[key]);\n      });\n    }\n\n    axios.post(action, formData, {\n      timeout: 30 * 1000,\n      headers: __assign(__assign({}, headers), {\n        'Content-Type': 'multipart/form-data'\n      }),\n      withCredentials: withCredentials,\n      onUploadProgress: function (e) {\n        var percentage = Math.round(e.loaded * 100 / e.total) || 0;\n\n        if (percentage < 100) {\n          updateFileList(_file, {\n            percent: percentage,\n            status: 'uploading'\n          });\n          if (onProgress) onProgress(percentage, file);\n        }\n      }\n    }).then(function (res) {\n      updateFileList(_file, {\n        status: 'success',\n        response: res.data\n      });\n      if (onSuccess) onSuccess(res.data, file);\n      if (onChange) onChange(file);\n    }).catch(function (err) {\n      updateFileList(_file, {\n        status: 'error',\n        error: err\n      });\n\n      if (onError) {\n        onError(err, file);\n      }\n\n      if (onChange) {\n        onChange(file);\n      }\n    });\n  };\n\n  return _jsxs(\"div\", __assign({\n    className: \"g-upload-component\"\n  }, {\n    children: [_jsxs(\"div\", __assign({\n      className: \"g-upload-input\",\n      style: {\n        display: 'inline-block'\n      },\n      onClick: handleClick\n    }, {\n      children: [drag ? _jsx(Dragger, __assign({\n        onFile: function (files) {\n          return uploadFiles(files);\n        }\n      }, {\n        children: children\n      }), void 0) : children, _jsx(\"input\", {\n        className: \"g-file-input\",\n        style: {\n          display: 'none'\n        },\n        ref: fileInput,\n        onChange: handleFileChange,\n        type: \"file\",\n        accept: accept,\n        multiple: multiple\n      }, void 0)]\n    }), void 0), _jsx(UploadList, {\n      fileList: fileList,\n      onRemove: handleRemove\n    }, void 0)]\n  }), void 0);\n};\nUpload.defaultProps = {\n  name: 'file'\n};\nexport default Upload;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","il","j","jsx","_jsx","jsxs","_jsxs","useRef","useState","UploadList","Dragger","axios","Upload","props","action","defaultFileList","beforeUpload","onError","onProgress","onSuccess","onChange","onRemove","children","drag","accept","multiple","name","headers","data","withCredentials","fileInput","_a","fileList","setFileList","handleClick","current","click","handleFileChange","e","files","target","uploadFiles","value","postFiles","Array","forEach","file","post","result","Promise","then","processedFile","updateFileList","updateFile","updateObj","prevFile","map","uid","handleRemove","prevList","filter","item","_file","Date","now","status","size","percent","raw","formData","FormData","append","keys","key","timeout","onUploadProgress","percentage","Math","round","loaded","total","res","response","catch","err","error","className","style","display","onClick","onFile","ref","type","defaultProps"],"sources":["/home/kmeyiswa/personalProjects/youtube-react-mini/node_modules/style-components/dist/components/Upload/Upload.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useRef, useState } from 'react';\r\nimport UploadList from './UploadList';\r\nimport Dragger from './Dragger';\r\nimport axios from 'axios';\r\nexport var Upload = function (props) {\r\n    var action = props.action, defaultFileList = props.defaultFileList, beforeUpload = props.beforeUpload, onError = props.onError, onProgress = props.onProgress, onSuccess = props.onSuccess, onChange = props.onChange, onRemove = props.onRemove, children = props.children, drag = props.drag, accept = props.accept, multiple = props.multiple, name = props.name, headers = props.headers, data = props.data, withCredentials = props.withCredentials;\r\n    var fileInput = useRef(null);\r\n    var _a = useState(defaultFileList || []), fileList = _a[0], setFileList = _a[1];\r\n    var handleClick = function () {\r\n        if (fileInput.current) {\r\n            fileInput.current.click();\r\n        }\r\n    };\r\n    var handleFileChange = function (e) {\r\n        var files = e.target.files;\r\n        if (!files)\r\n            return;\r\n        uploadFiles(files);\r\n        if (fileInput.current) {\r\n            fileInput.current.value = '';\r\n        }\r\n    };\r\n    var uploadFiles = function (files) {\r\n        var postFiles = Array.from(files);\r\n        postFiles.forEach(function (file) {\r\n            if (!beforeUpload) {\r\n                post(file);\r\n            }\r\n            else {\r\n                var result = beforeUpload(file);\r\n                if (result && result instanceof Promise) {\r\n                    result.then(function (processedFile) {\r\n                        post(processedFile);\r\n                    });\r\n                }\r\n                else if (result !== false) {\r\n                    post(file);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    var updateFileList = function (updateFile, updateObj) {\r\n        setFileList(function (prevFile) {\r\n            return prevFile.map(function (file) {\r\n                return file.uid === updateFile.uid ? __assign(__assign({}, file), updateObj) : file;\r\n            });\r\n        });\r\n    };\r\n    var handleRemove = function (file) {\r\n        setFileList(function (prevList) {\r\n            return prevList.filter(function (item) { return item.uid !== file.uid; });\r\n        });\r\n        if (onRemove)\r\n            onRemove(file);\r\n    };\r\n    var post = function (file) {\r\n        var _file = {\r\n            uid: Date.now() + 'upload-file',\r\n            status: 'ready',\r\n            name: file.name,\r\n            size: file.size,\r\n            percent: 0,\r\n            raw: file\r\n        };\r\n        setFileList(function (prevList) {\r\n            return __spreadArray([_file], prevList);\r\n        });\r\n        var formData = new FormData();\r\n        formData.append(name || 'file', file);\r\n        if (data) {\r\n            Object.keys(data).forEach(function (key) {\r\n                formData.append(key, data[key]);\r\n            });\r\n        }\r\n        axios\r\n            .post(action, formData, {\r\n            timeout: 30 * 1000,\r\n            headers: __assign(__assign({}, headers), { 'Content-Type': 'multipart/form-data' }),\r\n            withCredentials: withCredentials,\r\n            onUploadProgress: function (e) {\r\n                var percentage = Math.round((e.loaded * 100) / e.total) || 0;\r\n                if (percentage < 100) {\r\n                    updateFileList(_file, { percent: percentage, status: 'uploading' });\r\n                    if (onProgress)\r\n                        onProgress(percentage, file);\r\n                }\r\n            }\r\n        })\r\n            .then(function (res) {\r\n            updateFileList(_file, { status: 'success', response: res.data });\r\n            if (onSuccess)\r\n                onSuccess(res.data, file);\r\n            if (onChange)\r\n                onChange(file);\r\n        })\r\n            .catch(function (err) {\r\n            updateFileList(_file, { status: 'error', error: err });\r\n            if (onError) {\r\n                onError(err, file);\r\n            }\r\n            if (onChange) {\r\n                onChange(file);\r\n            }\r\n        });\r\n    };\r\n    return (_jsxs(\"div\", __assign({ className: \"g-upload-component\" }, { children: [_jsxs(\"div\", __assign({ className: \"g-upload-input\", style: { display: 'inline-block' }, onClick: handleClick }, { children: [drag ? (_jsx(Dragger, __assign({ onFile: function (files) { return uploadFiles(files); } }, { children: children }), void 0)) : (children),\r\n                    _jsx(\"input\", { className: \"g-file-input\", style: { display: 'none' }, ref: fileInput, onChange: handleFileChange, type: \"file\", accept: accept, multiple: multiple }, void 0)] }), void 0),\r\n            _jsx(UploadList, { fileList: fileList, onRemove: handleRemove }, void 0)] }), void 0));\r\n};\r\nUpload.defaultProps = {\r\n    name: 'file'\r\n};\r\nexport default Upload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}